[{"line":5,"elements":[{"start_timestamp":"2022-06-13T15:04:28.375Z","line":17,"name":"Should be able to verify the comments","description":"","id":"to-verify-the-comments-made-by-samantha;should-be-able-to-verify-the-comments;;2","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":1000000,"status":"passed"},"line":9,"name":"Users, Posts, comments api is up & running","match":{"location":"com.test.stepdef.VerifyEmail.users_posts_comments_api_is_up_running()"},"keyword":"Given "},{"result":{"error_message":"com.fasterxml.jackson.core.JsonParseException: Unexpected character ('<' (code 60)): expected a valid value (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (String)\"\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\" />\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\" />\n<link rel=\"stylesheet\" href=\"/style.css\" />\n<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.21.0/themes/prism-tomorrow.min.css\" />\n<title>JSONPlaceholder - Free Fake REST API</title>\n\n<script async src=\"https://www.googletagmanager.com/gtag/js?id=G-E3C3GCQVBN\"></script>\n<script>\n      window.dataLayer = window.dataL\"[truncated 6687 chars]; line: 2, column: 2]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2391)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:735)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportUnexpectedChar(ParserMinimalBase.java:659)\r\n\tat com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleOddValue(ReaderBasedJsonParser.java:2005)\r\n\tat com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken(ReaderBasedJsonParser.java:802)\r\n\tat com.fasterxml.jackson.databind.ObjectMapper._initForReading(ObjectMapper.java:4761)\r\n\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4667)\r\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3629)\r\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3597)\r\n\tat com.test.stepdef.VerifyEmail.search_for_user_with_name(VerifyEmail.java:41)\r\n\tat âœ½.Search for user with name \"Samantha\"(file:///C:/Users/sanja/Desktop/Eclipse_Workspace/RestAPIAutomation/features/verifyEmail.feature:10)\r\n","duration":3969000000,"status":"failed"},"line":10,"name":"Search for user with name \"Samantha\"","match":{"arguments":[{"val":"\"Samantha\"","offset":26}],"location":"com.test.stepdef.VerifyEmail.search_for_user_with_name(java.lang.String)"},"keyword":"When "},{"result":{"status":"skipped"},"line":11,"name":"Search for the post with user Id","match":{"location":"com.test.stepdef.VerifyEmail.search_for_the_post_with_user_id()"},"keyword":"And "},{"result":{"status":"skipped"},"line":12,"name":"Search for the comment with post Id","match":{"location":"com.test.stepdef.VerifyEmail.search_for_the_comment_with_post_id()"},"keyword":"And "},{"result":{"duration":120000000,"status":"skipped"},"line":13,"name":"Verify the email format","match":{"location":"com.test.stepdef.VerifyEmail.verify_the_email_format()"},"keyword":"Then "}],"tags":[{"name":"@API"},{"name":"@verifyEmail"}]}],"name":"To verify the comments made by Samantha","description":"","id":"to-verify-the-comments-made-by-samantha","keyword":"Feature","uri":"file:features/verifyEmail.feature","tags":[{"name":"@API","type":"Tag","location":{"line":4,"column":1}}]}]